{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./js/script.js","webpack:///./js/modules/slider.js"],"sourcesContent":["import slider from './modules/slider';\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    \r\n    slider({\r\n        container: \".offer__slider\", // общая обертка, куда обернуто всё\r\n        wrapper: \".offer__slider-wrapper\", //обертка, чтобы подключить слайдеру overflow\r\n        field: \".offer__slider-inner\", //обертка, уже для самих слайдов + чтобы растянуть слайды по горизонту \r\n        slide: '.offer__slide', // каждый слайд который имеется\r\n        nextArrow: \".offer__slider-next\", // кнопка следующего файла\r\n        prevArrow: \".offer__slider-prev\", // кнопка предыдущего файла\r\n        totalCounter: \"#total\", // общее число слайдов\r\n        currentCounter: \"#current\" // какой по счету открыт слайд прямо сейчас\r\n    });\r\n});","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n    const slides = document.querySelectorAll(slide), //все слайды на стр\r\n    slider = document.querySelector(container), //общий wrapper\r\n    prev = document.querySelector(prevArrow), // предыдущая кнопка\r\n    next = document.querySelector(nextArrow), // следующая кнопка\r\n    total = document.querySelector(totalCounter), // всего число слайдов\r\n    current = document.querySelector(currentCounter), // какой сейчас слайд\r\n    slidesWrapper = document.querySelector(wrapper), //общая обертка\r\n    slidesField = document.querySelector(field), //поле с нашими слайдами\r\n    width = window.getComputedStyle(slidesWrapper).width; //ширина которая приминилась css\r\n\r\n    let slideIndex = 1; //изначальный индекс\r\n    let offset = 0; //отступ\r\n\r\n    if (slides.length < 10) { // условие на общее количество слайдов чтобы прописать в начале\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + \"%\"; //задаем ширину четырех слайдов\r\n    slidesField.style.display = \"flex\"; //ставим дисплей флекс, чтобы было всё в полоску\r\n    slidesField.style.transition = \"0.9s all\"; //ставим плавность перемещения слайдов\r\n\r\n    slidesWrapper.style.overflow = \"hidden\"; //скрываем все элементы которые не попадают в область видимости\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width; //устанавливаем каждому слайду одинаковую ширину width\r\n    });\r\n\r\n     // точки навигации для слайдов\r\n\r\n     slider.style.position = \"relative\";\r\n\r\n     const indicators = document.createElement(\"ol\"), //создаем список\r\n           dots = [];\r\n \r\n     indicators.classList.add(\"carousel-indicators\"); //добавляем класс и стили к нему\r\n     indicators.style.cssText = `\r\n         position: absolute;\r\n         right: 0;\r\n         bottom: 0;\r\n         left: 0;\r\n         z-index: 15;\r\n         display: flex;\r\n         justify-content: center;\r\n         margin-right: 15%;\r\n         margin-left: 15%;\r\n         list-style: none;\r\n     `;\r\n     slider.append(indicators); //добавляем в слайдер новый список\r\n \r\n     for (let i = 0; i < slides.length; i++) { \r\n         const dot = document.createElement('li'); //создаем элемент списка\r\n         dot.setAttribute(\"data-slide-to\", i + 1); // создаем уникальный атрибут\r\n         dot.style.cssText = `\r\n             box-sizing: content-box;\r\n             flex: 0 1 auto;\r\n             width: 30px;\r\n             height: 6px;\r\n             margin-right: 3px;\r\n             margin-left: 3px;\r\n             cursor: pointer;\r\n             background-color: #fff;\r\n             background-clip: padding-box;\r\n             border-top: 10px solid transparent;\r\n             border-bottom: 10px solid transparent;\r\n             opacity: .5;\r\n             transition: opacity .6s ease;\r\n         `;\r\n \r\n         if (i == 0) {\r\n             dot.style.opacity = 1;\r\n         }\r\n \r\n         indicators.append(dot); //аппендим в индикатор dot\r\n         dots.push(dot); //пушим дот в массив\r\n     }\r\n \r\n     // конец точек навигации\r\n \r\n     function deleteNotDigits(str) {\r\n         return +str.replace(/\\D/g, \"\");\r\n     }\r\n \r\n \r\n     next.addEventListener(\"click\", () => {\r\n         if (offset == deleteNotDigits(width) * (slides.length - 1)) { //убираем все буквы из width\r\n                                                                                  // Если offset равняется ширине 4ого слайда, то на первый\r\n             offset = 0;\r\n         } else {\r\n             offset += deleteNotDigits(width);\r\n         }\r\n \r\n         slidesField.style.transform = `translateX(-${offset}px)`; //смещаем на один слайд вперед\r\n \r\n         if (slideIndex == slides.length) { //если слайд = макс числу слайдов, то возвращаем на 1 слайд\r\n             slideIndex = 1;\r\n         } else {\r\n             slideIndex ++; //иначе добавляем 1\r\n         }\r\n \r\n         if (slides.length < 10) { //проверка на приписку нуля\r\n             current.textContent = `0${slideIndex}`;\r\n         } else {\r\n             current.textContent = slideIndex;\r\n         }\r\n \r\n         //точки навигации\r\n \r\n         dots.forEach(dot => {\r\n             dot.style.opacity = \".5\"; //всем ставим 0.5 опасити\r\n         });\r\n         dots[slideIndex - 1].style.opacity = 1; //кроме текущего, ему ставим 1\r\n \r\n \r\n     });\r\n \r\n     prev.addEventListener(\"click\", () => {\r\n         if (offset == 0) { //убираем из width PX и если offset на первом слайде => переходим на 4\r\n             offset = deleteNotDigits(width) * (slides.length - 1);\r\n         } else {\r\n             offset -= deleteNotDigits(width);\r\n         }\r\n \r\n         slidesField.style.transform = `translateX(-${offset}px)`; //смещаем на один слайд вперед\r\n \r\n         if (slideIndex == 1) { //если слайд 1, перемещаемся на 4\r\n             slideIndex = slides.length; //смещаемся в конец\r\n         } else {\r\n             slideIndex --; //иначе добавляем 1\r\n         }\r\n \r\n         if (slides.length < 10) { //проверка на приписку нуля\r\n             current.textContent = `0${slideIndex}`;\r\n         } else {\r\n             current.textContent = slideIndex;\r\n         }\r\n \r\n          //точки навигации\r\n \r\n         dots.forEach(dot => {\r\n             dot.style.opacity = \".5\"; //всем ставим 0.5 опасити\r\n         });\r\n         dots[slideIndex - 1].style.opacity = 1; //кроме текущего, ему ставим 1\r\n     });\r\n \r\n     //кликабельность точек навигации слайдера\r\n \r\n     dots.forEach(dot => {\r\n         dot.addEventListener(\"click\", (e) => {\r\n             const slideTo = e.target.getAttribute(\"data-slide-to\"); //ищем атрибут data-slide-to\r\n \r\n             slideIndex = slideTo; //slideTo - атрибут data-slide-to\r\n             offset = deleteNotDigits(width) * (slideTo - 1); //устанавливаем offset на slideTo - 1\r\n \r\n             slidesField.style.transform = `translateX(-${offset}px)`; //смещаем на один слайд вперед\r\n \r\n             if (slides.length < 10) { //проверка на приписку нуля\r\n                 current.textContent = `0${slideIndex}`;\r\n             } else {\r\n                 current.textContent = slideIndex;\r\n             }\r\n \r\n             dots.forEach(dot => {\r\n                 dot.style.opacity = \".5\"; //всем ставим 0.5 опасити\r\n             });\r\n             dots[slideIndex - 1].style.opacity = 1; //кроме текущего, ему ставим 1\r\n \r\n         });\r\n     }); \r\n\r\n    // SLIDER EASY\r\n\r\n    // let slideIndex = 1; //изначальный индекс\r\n\r\n    // showSlides(slideIndex); //функция чтобы показать изначально первый слайд\r\n\r\n    // if (slides.length < 10) { // условие на общее количество слайдов чтобы прописать в начале\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) { //функция показа слайдов. Перебирает все слайды и прибавляет или отнимает индекс\r\n    //     if (n > slides.length) { // если номер становится больше максимального, то перескакивает на первый индекс\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) { // аналогично верхнему\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach(item => item.style.display = \"none\"); // перебирает все слайды и ставит им дисплей нан\r\n\r\n    //     slides[slideIndex - 1].style.display = \"block\"; // ставит первый слайд на показ следующий или предыдущий\r\n\r\n    //     if (slides.length < 10) { // если число меньше 10, то приписывает 0\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // function plusSlides(n) { //вызов дополнительной функции чтобы передавать индекс + или -\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n\r\n    // prev.addEventListener(\"click\", () => { //навешиваем обработчик события на клик, чтобы возвращался назад\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener(\"click\", () => { //навешиваем обработчик события на клик, чтобы возвращался вперед\r\n    //     plusSlides(1);\r\n    // });\r\n}\r\n\r\nexport default slider;"],"names":["window","addEventListener","container","slide","nextArrow","prevArrow","totalCounter","currentCounter","wrapper","field","slides","document","querySelectorAll","slider","querySelector","prev","next","total","current","slidesWrapper","slidesField","width","getComputedStyle","slideIndex","offset","length","textContent","style","display","transition","overflow","forEach","position","indicators","createElement","dots","classList","add","cssText","append","i","dot","setAttribute","opacity","push","deleteNotDigits","str","replace","transform","e","slideTo","target","getAttribute"],"sourceRoot":""}